Introduction:
Our team's project is a customized Spotify playlist based on the user's preferences and the current weather conditions. 
This document outlines the rationale behind choosing our technology stack for this project after considering two main options.

Technology Stack Consideration:

Frontend: React
Backend: Node.js with Express

Frontend: React
Backend: Django with Django REST Framework

Reasoning:

After considering both options, we decided to choose the combination of React for the frontend and Node.js with Express for the backend for the 
following reasons:

-Uniformity in language: Using JavaScript for both frontend (React) and backend (Node.js) will simplify the development process and ensure a more
coherent codebase.

-Flexibility and scalability: Node.js with Express is a lightweight and flexible solution, and will make it easy for us to build our application.

-Seamless integration with APIs: Node.js allows for efficient handling of asynch operations. It will simplify the integration with Spotify
and Weather APIs.


Overall, using React for the frontend and Node.js with Express for the back end is a more cohesive and efficient technology stack for 
our project requirements.

**UPDATE**
We switched our back end to Flask because we realized that we were more comfortable working with Python, and it worked well for our requirements.
It maintained many of the strengths we had chosen Express for, but increased the ease of development for us. 
